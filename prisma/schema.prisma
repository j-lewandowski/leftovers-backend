generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  rating    Rating[]
  recipe    Recipe[]
}

model SignUpRequests {
  validationToken String   @map("validation_token")
  createdAt       DateTime @default(now()) @map("created_at")
  email           String   @id
  password        String
}

model ResetPasswordRequest {
  validationToken String @id @map("validation_token")
  email           String
}

model Recipe {
  id               String          @id @default(uuid())
  title            String
  description      String          @default("Description")
  preparationTime  PreparationTime @default(UP_TO_15_MIN) @map("preparation_time")
  ingredients      String[]
  visibility       Visibility      @default(PUBLIC)
  createdAt        DateTime        @default(now()) @map("created_at")
  authorId         String          @map("author_id")
  categoryName     String          @default("breakfast") @map("category_name")
  preparationSteps String[]        @map("preparation_steps")
  servings         Int             @default(1)
  image            String
  rating           Rating[]
  author           User            @relation(fields: [authorId], references: [id])
  category         Category        @relation(fields: [categoryName], references: [name])
}

model Category {
  name   String   @id
  recipe Recipe[]
}

model Rating {
  id       Int     @id @default(autoincrement())
  value    Int
  recipeId String? @map("recipe_id")
  userId   String  @map("user_id")
  recipe   Recipe? @relation(fields: [recipeId], references: [id])
  user     User    @relation(fields: [userId], references: [id])
}

enum Visibility {
  PRIVATE
  PUBLIC
}

enum PreparationTime {
  UP_TO_15_MIN
  UP_TO_30_MIN
  UP_TO_60_MIN
  OVER_60_MIN
}
